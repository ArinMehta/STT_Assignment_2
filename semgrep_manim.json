{"version":"1.139.0","results":[{"check_id":"python.lang.security.audit.exec-detected.exec-detected","path":"manimlib/extract_scene.py","start":{"line":24,"col":9,"offset":527},"end":{"line":24,"col":49,"offset":567},"extra":{"message":"Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.exec-detected.exec-detected","shortlink":"https://sg.run/ndRX"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.exec-detected.exec-detected","path":"manimlib/extract_scene.py","start":{"line":178,"col":5,"offset":6158},"end":{"line":178,"col":39,"offset":6192},"extra":{"message":"Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b102_exec_used.html","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.exec-detected.exec-detected","shortlink":"https://sg.run/ndRX"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"manimlib/mobject/mobject.py","start":{"line":651,"col":16,"offset":22122},"end":{"line":651,"col":34,"offset":22140},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"manimlib/mobject/mobject.py","start":{"line":654,"col":21,"offset":22210},"end":{"line":654,"col":39,"offset":22228},"extra":{"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected","path":"manimlib/utils/file_ops.py","start":{"line":39,"col":9,"offset":953},"end":{"line":39,"col":52,"offset":996},"extra":{"message":"Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead.","metadata":{"cwe":["CWE-939: Improper Authorization in Handler for Custom URL Scheme"],"owasp":"A01:2017 - Injection","source-rule-url":"https://github.com/PyCQA/bandit/blob/b1411bfb43795d3ffd268bef17a839dee954c2b1/bandit/blacklists/calls.py#L163","bandit-code":"B310","asvs":{"control_id":"5.2.4 Dynamic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://cwe.mitre.org/data/definitions/939.html"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected","shortlink":"https://sg.run/dKZZ"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"manimlib/utils/sounds.py","start":{"line":28,"col":19,"offset":739},"end":{"line":28,"col":23,"offset":743},"extra":{"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line manimlib/mobject/svg/svg_mobject.py:374:\n `=` was unexpected","path":"manimlib/mobject/svg/svg_mobject.py"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line semgrep_manim.json:1:\n missing element","path":"semgrep_manim.json"}],"paths":{"scanned":[".github/ISSUE_TEMPLATE/bug_report.md",".github/ISSUE_TEMPLATE/config.yml",".github/ISSUE_TEMPLATE/error-when-using.md",".github/PULL_REQUEST_TEMPLATE.md",".github/workflows/docs.yml",".github/workflows/publish.yml",".gitignore","LICENSE.md","MANIFEST.in","README.md","docs/Makefile","docs/example.py","docs/make.bat","docs/requirements.txt","docs/source/_static/icon.png","docs/source/conf.py","docs/source/development/about.rst","docs/source/development/changelog.rst","docs/source/development/contributing.rst","docs/source/documentation/animation/index.rst","docs/source/documentation/camera/index.rst","docs/source/documentation/constants.rst","docs/source/documentation/custom_config.rst","docs/source/documentation/mobject/index.rst","docs/source/documentation/scene/index.rst","docs/source/documentation/shaders/index.rst","docs/source/documentation/utils/index.rst","docs/source/getting_started/configuration.rst","docs/source/getting_started/example_scenes.rst","docs/source/getting_started/installation.rst","docs/source/getting_started/quickstart.rst","docs/source/getting_started/structure.rst","docs/source/getting_started/whatsnew.rst","docs/source/index.rst","docs/source/manim_example_ext.py","example_scenes.py","logo/cropped.png","logo/graph.png","logo/logo.py","logo/transparent_graph.png","logo/white_with_name.png","logo/with_name.png","logo/with_subtext.png","manimlib/__init__.py","manimlib/__main__.py","manimlib/animation/__init__.py","manimlib/animation/animation.py","manimlib/animation/composition.py","manimlib/animation/creation.py","manimlib/animation/fading.py","manimlib/animation/growing.py","manimlib/animation/indication.py","manimlib/animation/movement.py","manimlib/animation/numbers.py","manimlib/animation/rotation.py","manimlib/animation/specialized.py","manimlib/animation/transform.py","manimlib/animation/transform_matching_parts.py","manimlib/animation/update.py","manimlib/camera/__init__.py","manimlib/camera/camera.py","manimlib/camera/camera_frame.py","manimlib/config.py","manimlib/constants.py","manimlib/default_config.yml","manimlib/event_handler/__init__.py","manimlib/event_handler/event_dispatcher.py","manimlib/event_handler/event_listner.py","manimlib/event_handler/event_type.py","manimlib/extract_scene.py","manimlib/logger.py","manimlib/mobject/__init__.py","manimlib/mobject/boolean_ops.py","manimlib/mobject/changing.py","manimlib/mobject/coordinate_systems.py","manimlib/mobject/frame.py","manimlib/mobject/functions.py","manimlib/mobject/geometry.py","manimlib/mobject/interactive.py","manimlib/mobject/matrix.py","manimlib/mobject/mobject.py","manimlib/mobject/mobject_update_utils.py","manimlib/mobject/number_line.py","manimlib/mobject/numbers.py","manimlib/mobject/probability.py","manimlib/mobject/shape_matchers.py","manimlib/mobject/svg/__init__.py","manimlib/mobject/svg/brace.py","manimlib/mobject/svg/drawings.py","manimlib/mobject/svg/old_tex_mobject.py","manimlib/mobject/svg/special_tex.py","manimlib/mobject/svg/string_mobject.py","manimlib/mobject/svg/svg_mobject.py","manimlib/mobject/svg/tex_mobject.py","manimlib/mobject/svg/text_mobject.py","manimlib/mobject/three_dimensions.py","manimlib/mobject/types/__init__.py","manimlib/mobject/types/dot_cloud.py","manimlib/mobject/types/image_mobject.py","manimlib/mobject/types/point_cloud_mobject.py","manimlib/mobject/types/surface.py","manimlib/mobject/types/vectorized_mobject.py","manimlib/mobject/value_tracker.py","manimlib/mobject/vector_field.py","manimlib/module_loader.py","manimlib/scene/__init__.py","manimlib/scene/interactive_scene.py","manimlib/scene/scene.py","manimlib/scene/scene_embed.py","manimlib/scene/scene_file_writer.py","manimlib/shader_wrapper.py","manimlib/shaders/image/frag.glsl","manimlib/shaders/image/vert.glsl","manimlib/shaders/inserts/NOTE.md","manimlib/shaders/inserts/complex_functions.glsl","manimlib/shaders/inserts/emit_gl_Position.glsl","manimlib/shaders/inserts/finalize_color.glsl","manimlib/shaders/inserts/get_unit_normal.glsl","manimlib/shaders/inserts/get_xyz_to_uv.glsl","manimlib/shaders/mandelbrot_fractal/frag.glsl","manimlib/shaders/mandelbrot_fractal/vert.glsl","manimlib/shaders/newton_fractal/frag.glsl","manimlib/shaders/newton_fractal/vert.glsl","manimlib/shaders/quadratic_bezier/depth/frag.glsl","manimlib/shaders/quadratic_bezier/depth/geom.glsl","manimlib/shaders/quadratic_bezier/depth/vert.glsl","manimlib/shaders/quadratic_bezier/fill/frag.glsl","manimlib/shaders/quadratic_bezier/fill/geom.glsl","manimlib/shaders/quadratic_bezier/fill/vert.glsl","manimlib/shaders/quadratic_bezier/stroke/frag.glsl","manimlib/shaders/quadratic_bezier/stroke/geom.glsl","manimlib/shaders/quadratic_bezier/stroke/vert.glsl","manimlib/shaders/simple_vert.glsl","manimlib/shaders/surface/frag.glsl","manimlib/shaders/surface/vert.glsl","manimlib/shaders/textured_surface/frag.glsl","manimlib/shaders/textured_surface/vert.glsl","manimlib/shaders/true_dot/frag.glsl","manimlib/shaders/true_dot/geom.glsl","manimlib/shaders/true_dot/vert.glsl","manimlib/tex_templates.yml","manimlib/typing.py","manimlib/utils/__init__.py","manimlib/utils/bezier.py","manimlib/utils/cache.py","manimlib/utils/color.py","manimlib/utils/debug.py","manimlib/utils/dict_ops.py","manimlib/utils/directories.py","manimlib/utils/family_ops.py","manimlib/utils/file_ops.py","manimlib/utils/images.py","manimlib/utils/iterables.py","manimlib/utils/paths.py","manimlib/utils/rate_functions.py","manimlib/utils/shaders.py","manimlib/utils/simple_functions.py","manimlib/utils/sounds.py","manimlib/utils/space_ops.py","manimlib/utils/tex.py","manimlib/utils/tex_file_writing.py","manimlib/utils/tex_to_symbol_count.py","manimlib/window.py","pyproject.toml","requirements.txt","semgrep_manim.json","setup.cfg","setup.py"]},"time":{"rules":[],"rules_parse_time":0.7377030849456787,"profiling_times":{"config_time":2.110152244567871,"core_time":2.1162052154541016,"ignores_time":0.0010998249053955078,"total_time":4.227880954742432},"parsing_time":{"total_time":0.0,"per_file_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":5.726769924163818,"per_file_time":{"mean":0.013104736668567093,"std_dev":0.0018028203674140336},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"matching_time":{"total_time":0.0,"per_file_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":0.0,"per_def_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_defs":[]},"fixpoint_timeouts":[],"prefiltering":{"project_level_time":0.0,"file_level_time":0.0,"rules_with_project_prefilters_ratio":0.0,"rules_with_file_prefilters_ratio":0.9862528572808344,"rules_selected_ratio":0.04021119732139983,"rules_matched_ratio":0.04021119732139983},"targets":[],"total_bytes":0,"max_memory_bytes":1112410880},"engine_requested":"OSS","skipped_rules":[]}
